<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Cloudflare Free Argo tunnel 白嫖计划</title>
      <link href="/argo-tunnel-for-free.html"/>
      <url>/argo-tunnel-for-free.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>之前看到了 <code>Cloudflare Blog</code> 更新了 <a href="https://blog.cloudflare.com/a-free-argo-tunnel-for-your-next-project/"><code>「A free Argo Tunnel for your next project」</code></a> 一文，最近终于有空闲时间，搭建一个测试一下。</p></blockquote><h3 id="啥是-Argo-Tunnel"><a href="#啥是-Argo-Tunnel" class="headerlink" title="啥是 Argo Tunnel"></a>啥是 <code>Argo Tunnel</code></h3><blockquote><p>Argo隧道提供了一种简便的方法，可将Web服务器安全地公开到Internet，而无需打开防火墙端口和配置ACL。 Argo隧道还可以确保请求在到达网络服务器之前先通过Cloudflare进行路由，因此可以确保通过Cloudflare的WAF和Unmetered DDoS缓解功能停止了攻击流量，并且如果为帐户启用了这些功能，则可以通过Access进行身份验证。</p><p>–翻译自 <a href="https://developers.cloudflare.com/argo-tunnel/"><code>Argo Tunnel -- Cloudflare Docs</code></a></p></blockquote><p>用人话理解 -&gt; 可以用 <code>NAT</code> 机子通过 <code>Argo Tunnel</code> 来穿透任意端口，并且还可以享受到 <code>Argo Smart Routing</code> 技术，极大幅度优化了回源速度，还有一大堆网络攻击保护技术也可以被启用。</p><p>这不得爽死吗（</p><h3 id="啥是-Argo-Smart-Routing"><a href="#啥是-Argo-Smart-Routing" class="headerlink" title="啥是 Argo Smart Routing"></a>啥是 <code>Argo Smart Routing</code></h3><p><code>Argo Smart Routing</code> 是 <code>Cloudflare</code> 为优化回源性能所推出的一项技术，你可以在<a href="https://www.cloudflare.com/en-gb/products/argo-smart-routing/">这里</a>获得技术详情</p><p>在未启用 <code>Argo Smart Routing</code> 前， <code>Cloudflare</code> 将会如此回源。</p><ol><li><code>Client</code> -&gt; <code>Cloudflare Edge Server</code></li><li><code>Cloudflare Edge Server</code> -&gt; <code>Trafic over Normal Internet Node</code> -&gt; <code>Origin Server</code></li></ol><p>在启用 <code>Argo Smart Routing</code> 后， <code>Cloudflare</code> 将会如此回源。</p><ol><li><code>Client</code> -&gt; <code>Cloudflare Edge Server</code></li><li><code>Cloudflare Edge Server</code> -&gt; <code>Trafic over The Fast*** links</code> -&gt; <code>Cloudflare Argo Server</code></li><li><code>Cloudflare Argo Server</code> &lt;-&gt; <code>Origin Server</code></li></ol><p>相较于未启用前，<code>Argo Smart Routing</code> 可以有效优化请求用时。</p><h3 id="Install-Cloudflared"><a href="#Install-Cloudflared" class="headerlink" title="Install Cloudflared"></a>Install <a href="https://github.com/cloudflare/cloudflared"><code>Cloudflared</code></a></h3><p><code>Cloudflared</code> 作为源服务器和 <code>Cloudflare Argo Server</code> 的链接件，是必不可少的。</p><p>你可以参考<a href="https://github.com/cloudflare/cloudflared#installing-cloudflared">这里</a>的文档。</p><ol><li>在 <code>macOS</code> 上安装:<ul><li>在<a href="https://github.com/cloudflare/cloudflared/releases">这里</a>下载releases来安装</li><li>通过 <code>brew install cloudflare/cloudflare/cloudflared</code> 安装</li></ul></li><li>在 <code>Linux</code> 上安装:<ul><li>参考<a href="https://developers.cloudflare.com/argo-tunnel/getting-started/installation#linux">这里</a>进行安装</li></ul></li><li>在 <code>Windows</code> 上安装:<ul><li>在<a href="https://github.com/cloudflare/cloudflared/releases">这里</a>下载文件并打开当前路径的 <code>PowerShell</code> 备用</li></ul></li></ol><h3 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h3><p>在终端执行以下操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared login</span><br></pre></td></tr></table></figure><p>选择Tunnel的域名，保存下来的证书请留下来备用。</p><h3 id="Run-Hello-world"><a href="#Run-Hello-world" class="headerlink" title="Run Hello world"></a>Run Hello world</h3><ol><li>将需要 Tunnel 的域名解析到 <code>Cloudflare Edge Server</code> (仅对于CNAME接入情况)</li><li>运行以下Command<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel --hostname &lt;tunnelDomain&gt; --hello-world```</span><br></pre></td></tr></table></figure></li><li>打开被 Tunnel 的域名，如果可以看到 Congrats! You created a tunnel! 一行，则说明你的执行成功，快去搞些有意思的事情吧（</li></ol><h3 id="Run-HTTP-Tunnel"><a href="#Run-HTTP-Tunnel" class="headerlink" title="Run HTTP Tunnel"></a>Run HTTP Tunnel</h3><p>既然我们已经成功运行了Demo，我们可以来搞一些有意思的东西，例如把http穿透出去</p><ol><li>参考<a href="https://cato.eu.org/argo-tunnel-for-free.html#Run-Hello-World">#Run Hello World</a> 第一步对域名进行解析</li><li>执行下列命令来穿透该http服务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel --hostname &lt;tunnelDomain&gt; --url &lt;url&gt;```</span><br></pre></td></tr></table></figure></li><li>使用浏览器打开 <code>&lt;tunnelDomain&gt;</code> ，测试http服务是否被成功穿透</li></ol><h3 id="Run-TCP-Tunnel"><a href="#Run-TCP-Tunnel" class="headerlink" title="Run TCP Tunnel"></a>Run TCP Tunnel</h3><p>我们同样也可以通过 <code>Argo Tunnel</code> 对 TCP 请求进行转发<br><code>Argo Tunnel</code> 的 TCP 转发依赖于 Cloudflare Access ，你需要在服务端以及客户端运行 <code>Cloudflared</code> 来转发数据</p><ol><li>参考<a href="https://cato.eu.org/argo-tunnel-for-free#Run-Hello-World">#Run Hello World</a> 第一步对域名进行解析</li><li>在服务端执行下列命令来启动一个tcp转发</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel --hostname &lt;tunnelDomain&gt; --url tcp://<span class="variable">$&#123;host&#125;</span>:<span class="variable">$&#123;port&#125;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在客户端进行登陆<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared login</span><br></pre></td></tr></table></figure></li><li>启动 client 侧的转发<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared access tcp --tunnel-host &lt;tunnelDomain&gt; --url tcp://0.0.0.0:<span class="variable">$&#123;localport&#125;</span>```</span><br></pre></td></tr></table></figure></li><li>访问本地的 <code>0.0.0.0:$&#123;localPort&#125;</code> TCP转发就成功了</li></ol><blockquote><p>p.s. Cloudflare Access 现暂不支持 UDP 转发</p></blockquote><h1 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h1><ol><li><p>先去这里 <a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/installation">Cloudflare</a><br>找到你系统对应的安装包 安装好</p></li><li><p>然后 ssh 输入</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel login</span><br></pre></td></tr></table></figure><ol start="3"><li>复制给的链接到浏览器打开,然后选择一个域名,最好是ns接入的(大不了后期可以cname套cdn)<br>打开ssh,我们输入</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel create 名字</span><br></pre></td></tr></table></figure><ol start="4"><li>创建一个隧道(名字自定义)<br>然后输入</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel route dns 隧道名称 刚才选择的域名</span><br></pre></td></tr></table></figure><ol start="5"><li>最后,我们输入</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel run –url localhost:你http服务端口号 隧道名字</span><br></pre></td></tr></table></figure><p>就成功运行了</p><ol start="6"><li>注:最后一步需要ssh一直挂着才能保证不会掉 建议开screen挂着</li></ol><p>最后访问第二步你选择的域名就可以了</p><p>先下手为强 这东西有可能和WARP一样 邻居上车了你就不太好上了<br>复制链接到浏览器那步部分chrome浏览器会报错 建议到edge打开</p><h2 id="原理-CF-Workers把非标端口转成443"><a href="#原理-CF-Workers把非标端口转成443" class="headerlink" title="原理:CF Workers把非标端口转成443"></a>原理:CF Workers把非标端口转成443</h2><p>备注:已在腾讯香港轻量上测试成功,AWS新加坡因为CF回源问题失败,其他没测,只支持http/https协议<br>workers代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(</span><br><span class="line">    <span class="string">&quot;fetch&quot;</span>,event =&gt; &#123;</span><br><span class="line">        <span class="built_in">let</span> url=new URL(event.request.url);</span><br><span class="line">        url.protocol=<span class="string">&quot;http&quot;</span>;     //协议,http或https,建议http不然会出现一些奇奇怪怪的问题</span><br><span class="line">        url.hostname=<span class="string">&quot;lty.pw&quot;</span>;     //小鸡域名,不要加http或者https前缀,直接域名就好</span><br><span class="line">        url.port=<span class="string">&quot;10010&quot;</span>;     //有http服务的端口</span><br><span class="line">        url.pathname=<span class="string">&quot;/test&quot;</span>;     //可选,把小鸡特定目录转为根目录,不需要直接删掉或者改成/</span><br><span class="line">        <span class="built_in">let</span> request=new Request(url,event.request);</span><br><span class="line">        event. respondWith(</span><br><span class="line">            fetch(request)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>部署完毕以后访问你的workers.dev域名理论上来说就能用了,自选的话直接解析CNAME到你的workers.dev域名</p>]]></content>
      
      
      <categories>
          
          <category> Cloudflare </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
            <tag> Argo </tag>
            
            <tag> Argo tunnel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare WARP 给 VPS 服务器额外添加 IPv4 或 IPv6</title>
      <link href="/WarpIP.html"/>
      <url>/WarpIP.html</url>
      
        <content type="html"><![CDATA[<p>Cloudflare WARP 一键配置脚本是一个简化在 Linux VPS 上安装和配置 Cloud­flare WARP 的脚本，它支持 WARP 官方客户端和 Wire­Guard 两种主流 WARP 使用方式，适用于 IPv4/​IPv6 单双栈各类的网络环境，操作系统、 CPU 架构和虚拟化平台支持全面。本篇是介绍说明及简单使用教程。</p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL1AzVEVSWC93YXJwLnNo">https://github.com/P3TERX/warp.sh</a></p><h2 id="脚本特点"><a href="#脚本特点" class="headerlink" title="脚本特点"></a>脚本特点</h2><ul><li>CPU 架构支持：x86(i386)、x86_64(amd64)、ARMv8(aarch64)、ARMv7 等</li><li>虚拟化平台支持：KVM、Xen、OpenVZ、LXC 等</li><li>操作系统支持：Debian、Ubuntu、CentOS、Arch Linux 以及其它 DEB 系与 RHEL 系下游等</li><li>智能识别网络方案并自动匹配最佳配置方案进行部署</li><li>独家优化配置方案，获得更好的 WARP 网络体验</li><li>无需更换 Linux 内核，更稳定、更安全、更自由</li><li>直观的进程状态、网络状态和 WARP 状态显示</li><li>Cloudflare WARP 官方 Linux 客户端支持</li><li>“一把梭”式极致体验</li></ul><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>SSH 连上 VPS 。</p><ul><li><p>无论 VPS 是 IPv4 还是 IPv6 又或都有，添加 WARP Wire­Guard 双栈全局网络，直接使用以下命令一把梭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动配置 WARP WireGuard 双栈全局网络</span></span><br><span class="line">bash &lt;(curl -fsSL git.io/warp.sh) d</span><br></pre></td></tr></table></figure></li><li><p>添加或置换 IPv4/​IPv6 网络中的一个为 WARP Wire­Guard 网络，使用以下命令一把梭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动配置 WARP WireGuard IPv4 网络</span></span><br><span class="line">bash &lt;(curl -fsSL git.io/warp.sh) 4</span><br><span class="line"><span class="comment"># 自动配置 WARP WireGuard IPv6 网络</span></span><br><span class="line">bash &lt;(curl -fsSL git.io/warp.sh) 6</span><br></pre></td></tr></table></figure></li><li><p>Cloud­flare 官方于近期发布了 WARP Linux 客户端，同时也带来了全新的 Proxy Mode 功能，它使得我们可以让应用通过本地的 SOCKS5 代理端口去直接使用 WARP 网络。对于想尝鲜官方客户端的小伙伴，可以使用以下命令一把梭自动安装 WARP 官方客户端并开启 SOCKS5 本机代理端口 (<code>127.0.0.1:40000</code>)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动配置 WARP 官方客户端 SOCKS5 代理</span></span><br><span class="line">bash &lt;(curl -fsSL git.io/warp.sh) s5</span><br></pre></td></tr></table></figure></li><li><p>给喜欢功能菜单的小伙伴特别准备的功能，执行以下命令显示功能菜单和贴心的状态显示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Cloudflare WARP 一键配置脚本 功能菜单</span></span><br><span class="line">bash &lt;(curl -fsSL git.io/warp.sh) menu</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://imgcdn.p3terx.com/post/20210718032620.png#vwid=523&vhei=460" alt="img"></p><h2 id="注意事项和其它说明"><a href="#注意事项和其它说明" class="headerlink" title="注意事项和其它说明"></a>注意事项和其它说明</h2><ul><li>脚本目前处于公测阶段，可能还存在少量未知的 bug ，虽然不会导致毁灭性的问题，但不建议在生产环境中使用。</li><li><code>自动配置 WARP WireGuard 双栈全局网络</code>已做到适配目前大多数主流的系统和 IDC 网络方案，但不排除极个别的差异没考虑到，因此可能会因为路由规则不适用而导致 SSH 失联。若失联可以使用网页 VNC 登录到 VPS 然后执行<code>systemctl stop wg-quick@wgcf</code>命令停止 WARP WireGuard 进程即可恢复。</li><li>因 WireGuard 的 bug 与 WARP 网络偶发性连接故障，可能会出现网络状态显示均为未连接且网络访问异常的情况，使用<code>systemctl restart wg-quick@wgcf</code>命令重启 WARP WireGuard 进程即可。这个问题在 Linux 内核 5.6 以上更新频繁且激进的版本很大概率会遇到。</li><li>功能菜单中的<code>选择其它 WARP WireGuard 配置方案</code>最初设计为自动配置时因本地源 IP 识别错误导致失联后的半自动备用方案，目前已经几乎用不到了。当然你喜欢也可以直接用，如果需要使用可根据实际情况与需求选择，遵循“无则添加、有则置换”原则。注意确认 IP 地址是否需要修改，如需修改可以手动输入 IP。随着脚本的完善，逐步走向智能自动化，后续这个菜单可能会移除。</li><li>脚本使用 wgcf 生成通用 WireGuard 配置文件，配置完成后会原样备份至<code>~/.wgcf</code>目录，以便下次脚本自动调用，避免重复申请 WARP 账号导致 IP 被 Cloudflare 拉黑。</li><li>若之前自行生成过 WireGuard 配置文件，在文件名为<code>wgcf-profile.conf</code>的情况下在此配置文件所在目录执行脚本会优先调用并截取关键信息生成符合所选方案的新配置文件。这个功能对已生成过有 WARP+ 流量配置文件的小伙伴应该会很有用。</li><li>WARP WireGuard 双栈全局网络可能会导致 Docker 应用在 Bridge 网络模式下无法通过 IP 直接访问。可以使用 Host 网络模式，或者用 nginx 反代的方式去使用。暂时还没有完美解决方案。</li><li>WARP 官方 Linux 客户端才上线不久，实测稳定性不佳，且系统支持不全。只建议在 x86_64(amd64) 架构的 Debian 10+、Ubuntu 20.04、CentOS 8 系统中尝鲜。</li><li>WARP 官方客户端与 WARP WireGuard 网络可以同时使用，但 WARP 客户端的网络数据可能会走在 WARP WireGuard 隧道中，属于套娃行为，减速效果非常明显。</li><li>WARP 官方客户端可能无法在部分 IPv6 Only VPS 上使用，可以先添加 WARP WireGuard IPv4 网络，但正如前面所说套娃减速。</li></ul>]]></content>
      
      
      <categories>
          
          <category> WARP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
            <tag> Warp </tag>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo自定义文章url地址</title>
      <link href="/hexo-custom-article-url.html"/>
      <url>/hexo-custom-article-url.html</url>
      
        <content type="html"><![CDATA[<h1 id="自定义文章-URL"><a href="#自定义文章-URL" class="headerlink" title="自定义文章 URL"></a>自定义文章 URL</h1><p>先说说中文转义 URL 的方式，首先需要修改 hexo 根目录下的_config.yml 文件，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#permalink: :year/:month/:title/</span><br><span class="line">permalink: :year/:month/:urlname.html</span><br><span class="line">permalink_defaults:</span><br><span class="line">  urlname: index</span><br></pre></td></tr></table></figure><p>将原永久链接 permalink 中的 <strong>:title</strong> 替换为 urlname.html ，同时在 permalink_defaults 增加 urlname 属性，这样就可以通过在文章内容的 Formatter 配置文章的 URL 链接地址，笔者之前修改过一次永久链接格式，只保留了标题即：<code>permalink: :title.html</code>，现在修改为了 <code>permalink: :urlname.html</code> ,本文文章配置如下图，</p><p><img src="https://cdn.jsdelivr.net/gh/Mosiki/blog-imgs/blog/20200126164057.png" alt="img"></p><p>本文最终的 URL 地址就是：<code>http://cato.eu.org/hexo-custom-article-url.html</code></p><h1 id="修改文章模板"><a href="#修改文章模板" class="headerlink" title="修改文章模板"></a>修改文章模板</h1><p>修改 post.md</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">urlname:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">- 1</span><br><span class="line">categories:</span><br><span class="line">- 2</span><br><span class="line">keywords:</span><br><span class="line">description: </span><br><span class="line">cover: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>这样通过命令 <code>hexo new xxxxxx</code>命令新建的博客文章中就自动带有这个属性。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
            <tag> url自定义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题自用的一些设置</title>
      <link href="/Butterfly.html"/>
      <url>/Butterfly.html</url>
      
        <content type="html"><![CDATA[<p>实现：增加社交图标RSS，点击可查看网页RSS。</p><p>1.下载插件hexo-generator-feed</p><p>实现：增加社交图标RSS，点击可查看网页RSS。</p><p>1.下载插件hexo-generator-feed</p><pre class="mCustomScrollbar _mCS_60 mCS-autoHide mCS_no_scrollbar" id="pre-yaQysJ"><div id="mCSB_60" class="mCustomScrollBox mCS-minimal-dark mCSB_vertical_horizontal mCSB_outside" tabindex="0"><div id="mCSB_60_container" class="mCSB_container mCS_y_hidden mCS_no_scrollbar_y mCS_x_hidden mCS_no_scrollbar_x" dir="ltr"><code-pre class="code-pre" id="pre-3XrHCy">npm install hexo-generator-feed --save</code-pre></div></div></pre><p>2.在hexo的主配置文件_config.yml中任意位置添加以下代码：</p><pre class="mCustomScrollbar _mCS_61 mCS-autoHide mCS_no_scrollbar" id="pre-jEmxni"><div id="mCSB_61" class="mCustomScrollBox mCS-minimal-dark mCSB_vertical_horizontal mCSB_outside" tabindex="0"><div id="mCSB_61_container" class="mCSB_container mCS_y_hidden mCS_no_scrollbar_y mCS_x_hidden mCS_no_scrollbar_x" dir="ltr"><code-pre class="code-pre" id="pre-wydejn"><span class="hljs-attr">feed:</span>  <span class="hljs-attr">type:</span> <span class="hljs-string">atom</span>  <span class="hljs-attr">path:</span> <span class="hljs-string">atom.xml</span>  <span class="hljs-attr">limit:</span> <span class="hljs-number">20</span>  <span class="hljs-attr">hub:</span>  <span class="hljs-attr">content:</span>  <span class="hljs-attr">content_limit:</span> <span class="hljs-number">140</span>  <span class="hljs-attr">content_limit_delim:</span> <span class="hljs-string">&#39; &#39;</span>  <span class="hljs-attr">order_by:</span> <span class="hljs-string">-date</span>  <span class="hljs-attr">icon:</span> <span class="hljs-string">icon.png</span>  <span class="hljs-attr">autodiscovery:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">template:</span></code-pre></div></div></pre><p>3.修改butterfly主题配置文件_config.yml ，添加RSS的图标：</p><pre class="mCustomScrollbar _mCS_62 mCS-autoHide mCS_no_scrollbar" id="pre-Rp7YNY"><div id="mCSB_62" class="mCustomScrollBox mCS-minimal-dark mCSB_vertical_horizontal mCSB_outside" tabindex="0"><div id="mCSB_62_container" class="mCSB_container mCS_y_hidden mCS_no_scrollbar_y mCS_x_hidden mCS_no_scrollbar_x" dir="ltr"><code-pre class="code-pre" id="pre-jREArh"><span class="hljs-attr">social:</span>  <span class="hljs-attr">fa fa-rss:</span> <span class="hljs-string">/atom.xml</span> <span class="hljs-string">||</span> <span class="hljs-string">RSS链接</span></code-pre></div></div></pre><h1 id="全局背景透明渐变"><a href="#全局背景透明渐变" class="headerlink" title="全局背景透明渐变"></a>全局背景透明渐变</h1><p>这个就需要你自己新建一个 <code>css</code> 文件，在主题文件里的 <code>source \ css</code> 文件夹里新建一个 <code>css</code> 文件，命名随意。</p><p><img src="https://cdn.jsdelivr.net/gh/6e9/picgodemo/img/20210914175204.png" alt="img"></p><p>往里写几行代码就完事了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>,<span class="selector-class">.layout_page</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first</span>-child<span class="selector-pseudo">:not</span>(<span class="selector-class">.recent-posts</span>),<span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#page</span>,<span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>,<span class="selector-class">.read-mode</span> <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--light_bg_color)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--light_bg_color)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>,<span class="built_in">rgba</span>(<span class="number">247</span>,<span class="number">149</span>,<span class="number">51</span>,.<span class="number">1</span>),<span class="built_in">rgba</span>(<span class="number">243</span>,<span class="number">112</span>,<span class="number">85</span>,.<span class="number">1</span>) <span class="number">15%</span>,<span class="built_in">rgba</span>(<span class="number">239</span>,<span class="number">78</span>,<span class="number">123</span>,.<span class="number">1</span>) <span class="number">30%</span>,<span class="built_in">rgba</span>(<span class="number">161</span>,<span class="number">102</span>,<span class="number">171</span>,.<span class="number">1</span>) <span class="number">44%</span>,<span class="built_in">rgba</span>(<span class="number">80</span>,<span class="number">115</span>,<span class="number">184</span>,.<span class="number">1</span>) <span class="number">58%</span>,<span class="built_in">rgba</span>(<span class="number">16</span>,<span class="number">152</span>,<span class="number">173</span>,.<span class="number">1</span>) <span class="number">72%</span>,<span class="built_in">rgba</span>(<span class="number">7</span>,<span class="number">179</span>,<span class="number">155</span>,.<span class="number">1</span>) <span class="number">86%</span>,<span class="built_in">rgba</span>(<span class="number">109</span>,<span class="number">186</span>,<span class="number">130</span>,.<span class="number">1</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="页脚透明渐变"><a href="#页脚透明渐变" class="headerlink" title="页脚透明渐变"></a>页脚透明渐变</h1><p>完成了如上全局背景透明渐变，那么你的部落格背景就应该会有所变化了，但是发现这个页脚和我们的背景完全不搭。</p><p><img src="https://cdn.jsdelivr.net/npm/cpdd/posts/b74f504f/52270629898ea9e22bdf9e4b9b67a482.webp" alt="img"></p><p>那我们就进行美化页脚部分</p><p><img src="https://cdn.jsdelivr.net/npm/cpdd/posts/b74f504f/1e5e0c8cd3ff7d46f2618310578affa5.webp" alt="img"></p><p>一样在刚刚新建的 <code>css</code> 文件里，添加如下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">15</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>: <span class="number">20px</span>;</span><br><span class="line">    backdrop-<span class="attribute">filter</span>: <span class="built_in">saturate</span>(<span class="number">100%</span>) <span class="built_in">blur</span>(<span class="number">5px</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#footer</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">15</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#footer</span> <span class="selector-id">#footer-wrap</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--font-color)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#footer</span> <span class="selector-id">#footer-wrap</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--font-color)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在主题的配置文件里找到 <code>inject</code> 配置项，引用刚刚新建的 css 文件即可.</p><p><img src="https://cdn.jsdelivr.net/npm/cpdd/posts/b74f504f/26351165f1e020ba491b468fadf06fe0.webp" alt="img"></p><p>href 这里我是采用 CDN 的方式，如果你是存在本地的话，那么此时的 href 就应该是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/custom.css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;defer&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;this.media=&#x27;all&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>media=&quot;defer&quot; onload=&quot;this.media=&#39;all&#39;&quot;</code> 这个只是 css 的异步加载，当然，你不写也可以！</p><p>最后在主题的配置文件（<code>_config.butterfly.yml</code>）里，<code>CTRL + F </code>找到 <code>background</code> 配置项，修改它即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Website Background (設置網站背景)</span><br><span class="line"># can set it to color or image (可設置圖片 或者 顔色)</span><br><span class="line"># The formal of image: url(http://xxxxxx.com/xxx.jpg)</span><br><span class="line">background: linear-gradient(90deg,rgba(247,149,51,.1),rgba(243,112,85,.1) 15%,rgba(239,78,123,.1) 30%,rgba(161,102,171,.1) 44%,rgba(80,115,184,.1) 58%,rgba(16,152,173,.1) 72%,rgba(7,179,155,.1) 86%,rgba(109,186,130,.1))</span><br></pre></td></tr></table></figure><h1 id="页脚徽标"><a href="#页脚徽标" class="headerlink" title="页脚徽标"></a>页脚徽标</h1><p>这个挺简单的，可以直接通过 <a href="https://shields.io/">shields.io</a> 在线生成</p><ul><li>label：标签，徽标左侧内容</li><li>message：信息，徽标右侧内容</li><li>color：色值，支持支持十六进制、rgb、rgba、hsl、hsla 和 css 命名颜色。十六进制记得删除前面的 # 号</li></ul><p>输入相关信息后，点击 <code>make badge</code> 即可得到徽标的 URL。可以用 img 标签引用</p><p>接着打开主题的配置文件（<code>_config.butterfly.yml</code>）找到 <code>custom_text</code> 配置项并修改它，最后建议把 footer 配置下的 copyright 设为 false</p><p><img src="https://cdn.jsdelivr.net/npm/cpdd@0.0.1/posts/b74f504f/bda429f66a05f649e0c432c8dd55ae16.webp" alt="img"></p><p>我这里只是简单的举了个例子，想要啥就在 <a href="https://shields.io/">shields.io</a> 直接生成即可</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-inline:5px&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://hexo.io/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/Frame-Hexo-blue?style=flat&amp;logo=hexo&quot;</span> <span class="attr">title</span>=<span class="string">&quot;博客框架为 Hexo&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;HEXO&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-inline:5px&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://butterfly.js.org/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/Theme-Butterfly-6513df?style=flat&amp;logo=bitdefender&quot;</span> <span class="attr">title</span>=<span class="string">&quot;主题采用 Butterfly&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Butterfly&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-inline:5px&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.jsdelivr.com/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/CDN-jsDelivr-orange?style=flat&amp;logo=jsDelivr&quot;</span> <span class="attr">title</span>=<span class="string">&quot;本站使用 Jsdelivr 为静态资源提供CDN加速&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Jsdelivr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-inline:5px&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://github.com/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/Source-Github-d021d6?style=flat&amp;logo=GitHub&quot;</span> <span class="attr">title</span>=<span class="string">&quot;本站项目由 GitHub 托管&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;GitHub&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-inline:5px&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span><span class="attr">href</span>=<span class="string">&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/Copyright-BY--NC--SA%204.0-d42328?style=flat&amp;logo=Claris&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;img&quot;</span> <span class="attr">title</span>=<span class="string">&quot;本站采用知识共享署名-非商业性使用-相同方式共享4.0国际许可协议进行许可&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h1><p><a href="https://nicelinks.site/tags/Markdown/?utm_source=markdown.lovejade.cn">Markdown</a> 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号，以最小的输入代价，生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong>、<em>斜体</em> 或者<a href="https://vue-cli3.lovejade.cn/explore/">超文本链接</a>，更棒的是，它还可以：</p><p><strong>微注</strong>：清空目前这份默认文档，即处于可使用态。<a href="https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn">Arya</a> 另一大优点在于：编辑内容只会在您本地进行保存，不会上传您的数据至服务器，<strong>绝不窥测用户个人隐私，可放心使用</strong>；Github 源码：<a href="https://github.com/nicejade/markdown-online-editor">markdown-online-editor</a>，部分功能仍在开发🚧，敬请期待。</p><p>默认为<a href="https://hacpai.com/article/1577370404903?utm_source=github.com">所见即所得</a>模式，可通过 <code>⌘-⇧-M</code>（<code>Ctrl-⇧-M</code>）进行切换；或通过以下方式：</p><ul><li>所见即所得：<code>⌘-⌥-7</code>（<code>Ctrl-alt-7</code>）；</li><li>即时渲染：<code>⌘-⌥-8</code>（<code>Ctrl-alt-8</code>）；</li><li>分屏渲染：<code>⌘-⌥-9</code>（<code>Ctrl-alt-9</code>）；</li></ul><h2 id="PPT-预览"><a href="#PPT-预览" class="headerlink" title="PPT 预览"></a>PPT 预览</h2><p>如果您用作 <code>PPT</code> 预览（入口在<code>设置</code>中），需要注意，这里暂还不能支持各种图表的渲染；您可以使用 <code>---</code> 来定义水平方向上幻灯片，用 <code>--</code> 来定义垂直幻灯片；更多设定可以参见 <a href="https://github.com/hakimel/reveal.js#table-of-contents">RevealJs 文档</a>。</p><hr><h3 id="1-制作待办事宜-Todo-列表"><a href="#1-制作待办事宜-Todo-列表" class="headerlink" title="1. 制作待办事宜 Todo 列表"></a>1. 制作待办事宜 <code>Todo</code> 列表</h3><ul><li><input checked="" disabled="" type="checkbox"> 🎉 通常 <code>Markdown</code> 解析器自带的基本功能；</li><li><input checked="" disabled="" type="checkbox"> 🍀 支持<strong>流程图</strong>、<strong>甘特图</strong>、<strong>时序图</strong>、<strong>任务列表</strong>；</li><li><input checked="" disabled="" type="checkbox"> 🏁 支持粘贴 HTML 自动转换为 Markdown；</li><li><input checked="" disabled="" type="checkbox"> 💃🏻 支持插入原生 Emoji、设置常用表情列表；</li><li><input checked="" disabled="" type="checkbox"> 🚑 支持编辑内容保存<strong>本地存储</strong>，防止意外丢失；</li><li><input checked="" disabled="" type="checkbox"> 📝 支持<strong>实时预览</strong>，主窗口大小拖拽，字符计数；</li><li><input checked="" disabled="" type="checkbox"> 🛠 支持常用快捷键(<strong>Tab</strong>)，及代码块添加复制</li><li><input checked="" disabled="" type="checkbox"> ✨ 支持<strong>导出</strong>携带样式的 PDF、PNG、JPEG 等；</li><li><input checked="" disabled="" type="checkbox"> ✨ 升级 Vditor，新增对 <code>echarts</code> 图表的支持；</li><li><input checked="" disabled="" type="checkbox"> 👏 支持检查并格式化 Markdown 语法，使其专业；</li><li><input checked="" disabled="" type="checkbox"> 🦑 支持五线谱、及<a href="https://github.com/b3log/vditor/issues/117?utm_source=hacpai.com#issuecomment-526986052">部分站点、视频、音频解析</a>；</li><li><input checked="" disabled="" type="checkbox"> 🌟 增加对<strong>所见即所得</strong>编辑模式的支持(<code>⌘-⇧-M</code>)；</li></ul><hr><h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$<br>E=mc^2<br>$$</p><hr><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给页面里所有的 DOM 元素添加一个 1px 的描边（outline）;</span></span><br><span class="line">[].forEach.call($$(<span class="string">&quot;*&quot;</span>),<span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">  a.style.outline=<span class="string">&quot;1px solid #&quot;</span>+(~~(<span class="built_in">Math</span>.random()*(<span class="number">1</span>&lt;&lt;<span class="number">24</span>))).toString(<span class="number">16</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="4-高效绘制流程图"><a href="#4-高效绘制流程图" class="headerlink" title="4. 高效绘制流程图"></a>4. 高效绘制<a href="https://github.com/knsv/mermaid#flowchart">流程图</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">  A--&gt;B;</span><br><span class="line">  A--&gt;C;</span><br><span class="line">  B--&gt;D;</span><br><span class="line">  C--&gt;D;</span><br></pre></td></tr></table></figure><h3 id="5-高效绘制序列图"><a href="#5-高效绘制序列图" class="headerlink" title="5. 高效绘制序列图"></a>5. 高效绘制<a href="https://github.com/knsv/mermaid#sequence-diagram">序列图</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">  participant Alice</span><br><span class="line">  participant Bob</span><br><span class="line">  Alice-&gt;John: Hello John, how are you?</span><br><span class="line">  loop Healthcheck</span><br><span class="line">      John-&gt;John: Fight against hypochondria</span><br><span class="line">  end</span><br><span class="line">  Note right of John: Rational thoughts &lt;br/&gt;prevail...</span><br><span class="line">  John--&gt;Alice: Great!</span><br><span class="line">  John-&gt;Bob: How about you?</span><br><span class="line">  Bob--&gt;John: Jolly good!</span><br></pre></td></tr></table></figure><h3 id="6-高效绘制甘特图"><a href="#6-高效绘制甘特图" class="headerlink" title="6. 高效绘制甘特图"></a>6. 高效绘制<a href="https://github.com/knsv/mermaid#gantt-diagram">甘特图</a></h3><blockquote><p><strong>甘特图</strong>内在思想简单。基本是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行，及实际进展与计划要求的对比。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">  title 项目开发流程</span><br><span class="line">  section 项目确定</span><br><span class="line">    需求分析       :a1, 2019-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">  section 项目实施</span><br><span class="line">    概要设计      :2019-07-05  , 5d</span><br><span class="line">    详细设计      :2019-07-08, 10d</span><br><span class="line">    编码          :2019-07-15, 10d</span><br><span class="line">    测试          :2019-07-22, 5d</span><br><span class="line">  section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h3 id="7-支持图表"><a href="#7-支持图表" class="headerlink" title="7. 支持图表"></a>7. 支持图表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;backgroundColor&quot;: &quot;#212121&quot;,</span><br><span class="line">  &quot;title&quot;: &#123;</span><br><span class="line">    &quot;text&quot;: &quot;「晚晴幽草轩」访问来源&quot;,</span><br><span class="line">    &quot;subtext&quot;: &quot;2019 年 6 月份&quot;,</span><br><span class="line">    &quot;x&quot;: &quot;center&quot;,</span><br><span class="line">    &quot;textStyle&quot;: &#123;</span><br><span class="line">      &quot;color&quot;: &quot;#f2f2f2&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tooltip&quot;: &#123;</span><br><span class="line">    &quot;trigger&quot;: &quot;item&quot;,</span><br><span class="line">    &quot;formatter&quot;: &quot;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;legend&quot;: &#123;</span><br><span class="line">    &quot;orient&quot;: &quot;vertical&quot;,</span><br><span class="line">    &quot;left&quot;: &quot;left&quot;,</span><br><span class="line">    &quot;data&quot;: [</span><br><span class="line">      &quot;搜索引擎&quot;,</span><br><span class="line">      &quot;直接访问&quot;,</span><br><span class="line">      &quot;推荐&quot;,</span><br><span class="line">      &quot;其他&quot;,</span><br><span class="line">      &quot;社交平台&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;textStyle&quot;: &#123;</span><br><span class="line">      &quot;color&quot;: &quot;#f2f2f2&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;series&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;name&quot;: &quot;访问来源&quot;,</span><br><span class="line">      &quot;type&quot;: &quot;pie&quot;,</span><br><span class="line">      &quot;radius&quot;: &quot;55%&quot;,</span><br><span class="line">      &quot;center&quot;: [</span><br><span class="line">        &quot;50%&quot;,</span><br><span class="line">        &quot;60%&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;data&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;value&quot;: 10440,</span><br><span class="line">          &quot;name&quot;: &quot;搜索引擎&quot;,</span><br><span class="line">          &quot;itemStyle&quot;: &#123;</span><br><span class="line">            &quot;color&quot;: &quot;#ef4136&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;value&quot;: 4770,</span><br><span class="line">          &quot;name&quot;: &quot;直接访问&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;value&quot;: 2430,</span><br><span class="line">          &quot;name&quot;: &quot;推荐&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;value&quot;: 342,</span><br><span class="line">          &quot;name&quot;: &quot;其他&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;value&quot;: 18,</span><br><span class="line">          &quot;name&quot;: &quot;社交平台&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;itemStyle&quot;: &#123;</span><br><span class="line">        &quot;emphasis&quot;: &#123;</span><br><span class="line">          &quot;shadowBlur&quot;: 10,</span><br><span class="line">          &quot;shadowOffsetX&quot;: 0,</span><br><span class="line">          &quot;shadowColor&quot;: &quot;rgba(0, 0, 0, 0.5)&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>备注</strong>：上述 echarts 图表📈，其数据，须使用严格的 <strong>JSON</strong> 格式；您可使用 JSON.stringify(data)，将对象传换从而得标准数据，即可正常使用。</p></blockquote><h3 id="8-绘制表格"><a href="#8-绘制表格" class="headerlink" title="8. 绘制表格"></a>8. 绘制表格</h3><table><thead><tr><th align="left">作品名称</th><th align="left">在线地址</th><th align="center">上线日期</th></tr></thead><tbody><tr><td align="left">倾城之链</td><td align="left"><a href="https://nicelinks.site/??utm_source=markdown.lovejade.cn">https://nicelinks.site</a></td><td align="center">2017-09-20</td></tr><tr><td align="left">晚晴幽草轩</td><td align="left"><a href="https://jeffjade.com/??utm_source=markdown.lovejade.cn">https://jeffjade.com</a></td><td align="center">2014-09-20</td></tr><tr><td align="left">静轩之别苑</td><td align="left"><a href="http://quickapp.lovejade.cn/??utm_source=markdown.lovejade.cn">http://quickapp.lovejade.cn</a></td><td align="center">2019-01-12</td></tr></tbody></table><h3 id="9-更详细语法说明"><a href="#9-更详细语法说明" class="headerlink" title="9. 更详细语法说明"></a>9. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考这份 <a href="https://github.com/nicejade/nice-front-end-tutorial/blob/master/tutorial/markdown-tutorial.md">Markdown 资源列表</a>，涵盖入门至进阶教程，以及资源、平台等信息，能让您对她有更深的认知。</p><p>总而言之，不同于其它<em>所见即所得</em>的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 <code>GitHub</code> 和 技术问答网站 <code>StackOverFlow</code> 的御用书写格式，而且越发流行，正在在向各行业渗透。</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
          <category> butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
            <tag> Markdown </tag>
            
            <tag> Markdown写法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown文章的自用</title>
      <link href="/Markdownwritter.html"/>
      <url>/Markdownwritter.html</url>
      
        <content type="html"><![CDATA[<h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域</p><table><thead><tr><th align="center">写法</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">title</td><td align="center">【必需】页面标题</td></tr><tr><td align="center">date</td><td align="center">【必需】页面创建日期</td></tr><tr><td align="center">type</td><td align="center">【必需】标籤、分类和友情链接三个页面需要配置</td></tr><tr><td align="center">updated</td><td align="center">【可选】页面更新日期</td></tr><tr><td align="center">description</td><td align="center">【可选】页面描述</td></tr><tr><td align="center">keywords</td><td align="center">【可选】页面关键字</td></tr><tr><td align="center">comments</td><td align="center">【可选】显示页面评论模块 (默认 true)</td></tr><tr><td align="center">top_img</td><td align="center">【可选】页面顶部图片</td></tr><tr><td align="center">mathjax</td><td align="center">【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td align="center">katex</td><td align="center">【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td align="center">aside</td><td align="center">【可选】显示侧边栏 (默认 true)</td></tr><tr><td align="center">aplayer</td><td align="center">【可选】在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td align="center">highlight_shrink</td><td align="center">【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</td></tr></tbody></table><h2 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h2><table><thead><tr><th align="center">写法</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">title</td><td align="center">【必需】文章标题</td></tr><tr><td align="center">date</td><td align="center">【必需】文章创建日期</td></tr><tr><td align="center">updated</td><td align="center">【可选】文章更新日期</td></tr><tr><td align="center">tags</td><td align="center">【可选】文章标籤</td></tr><tr><td align="center">categories</td><td align="center">【可选】文章分类</td></tr><tr><td align="center">keywords</td><td align="center">【可选】文章关键字</td></tr><tr><td align="center">description</td><td align="center">【可选】文章描述</td></tr><tr><td align="center">top_img</td><td align="center">【可选】文章顶部图片</td></tr><tr><td align="center">cover</td><td align="center">【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</td></tr><tr><td align="center">comments</td><td align="center">【可选】显示文章评论模块(默认 true)</td></tr><tr><td align="center">toc</td><td align="center">【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td align="center">toc_number</td><td align="center">【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td align="center">copyright</td><td align="center">【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td align="center">copyright_author</td><td align="center">【可选】文章版权模块的<code>文章作者</code></td></tr><tr><td align="center">copyright_author_href</td><td align="center">【可选】文章版权模块的<code>文章作者</code>链接</td></tr><tr><td align="center">copyright_url</td><td align="center">【可选】文章版权模块的<code>文章连结</code>链接</td></tr><tr><td align="center">copyright_info</td><td align="center">【可选】文章版权模块的<code>版权声明</code>文字</td></tr><tr><td align="center">mathjax</td><td align="center">【可选】显示 mathjax (当设置 mathjax 的 per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="center">katex</td><td align="center">【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td align="center">aplayer</td><td align="center">【可选】在需要的页面加载 aplayer 的 js 和 css</td></tr><tr><td align="center">highlight_shrink</td><td align="center">【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td align="center">aside</td><td align="center">【可选】显示侧边栏 (默认 true)</td></tr></tbody></table><h2 id="MarkDown-在线编辑网站"><a href="#MarkDown-在线编辑网站" class="headerlink" title="MarkDown 在线编辑网站"></a>MarkDown 在线编辑网站</h2><p>参考 <a href="https://markdown.lovejade.cn/">Arya - 在线 MarkDown 编辑器</a></p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
            <tag> Markdown写法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
